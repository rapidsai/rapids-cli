[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "rapids_cli"
version = "0.1"
description = "A CLI for RAPIDS"
requires-python = ">=3.10"
dependencies = [
    "importlib_metadata >= 4.13.0; python_version < '3.12' ",
    "nvidia-ml-py>=12.0",
    "packaging",
    "psutil",
    "rich",
    "rich-click",
]

[project.optional-dependencies]
test = [
    "pytest",
]

[project.scripts]
rapids = "rapids_cli.cli:rapids"

[project.entry-points.rapids_doctor_check]
driver = "rapids_cli.doctor.checks.cuda_driver:check_driver_compatibility"
gpu = "rapids_cli.doctor.checks.gpu:gpu_check"
gpu_compute_capability = "rapids_cli.doctor.checks.gpu:check_gpu_compute_capability"
cuda = "rapids_cli.doctor.checks.cuda_driver:cuda_check"
driver_compatibility = "rapids_cli.doctor.checks.cuda_driver:check_driver_compatibility"
sdd_nvme = "rapids_cli.doctor.checks.sdd_nvme:check_sdd_nvme"
memory_to_gpu_ratio = "rapids_cli.doctor.checks.memory:check_memory_to_gpu_ratio"
nvlink_status = "rapids_cli.doctor.checks.nvlink:check_nvlink_status"
os = "rapids_cli.doctor.checks.os:detect_os"
docker = "rapids_cli.doctor.checks.dependencies:check_docker"
conda = "rapids_cli.doctor.checks.dependencies:check_conda"
pip = "rapids_cli.doctor.checks.dependencies:check_pip"
glb = "rapids_cli.doctor.checks.dependencies:check_glb"

[tool.pytest]
testpaths = ["tests"]


[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

line-length = 120

# Assume Python 3.10.
target-version = "py310"

[tool.ruff.lint]

# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = ["D", "E", "W", "F", "I", "N", "B"]
ignore = [
    "D101", # Missing docstring in public class
    "D212", # Multi-line docstring summary should start at the first line
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["I"]
# unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"rapids_cli/tests/*" = ["D", "N", "B"]
"conftest.py" = ["D", "N", "B"]
"docs/*" = ["D", "N", "B"]
"ci/*" = ["D", "N", "B"]

[tool.mypy]
exclude = ["examples", "venv", "ci", "docs", "conftest.py"]
